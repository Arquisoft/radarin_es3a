const { LitVocabTerm, getLocalStore } = require("@inrupt/lit-vocab-term");
const dataFactory = require("@rdfjs/data-model");

const { namedNode } = dataFactory;

/**
  Generated by artifact generator [@inrupt/lit-artifact-generator], version [0.10.13]
  as part of artifact: [vocab-solid-common], version: [0.3.9]
  at 'Thursday, May 28, 2020 1:37 AM'.

  Vocabulary built from vocab list file: [/home/pmcb55/Work/Projects/LIT/lit-vocab/solid-rdf-vocab/Common/Vocab-List-Solid-Common.yml].

  The Solid vocabulary providing terms (e.g. classes, properties and text strings (e.g.
 informative labels or error messages) commonly used across Solid services.
 */

function _NS(localName) {
  return namedNode(`https://inrupt.com/vocab/solid-service-common#${localName}`);
}

const SOLID_SERVICE_COMMON = {
  PREFIX: "solid-service-common",
  NAMESPACE: "https://inrupt.com/vocab/solid-service-common#",
  PREFIX_AND_NAMESPACE: { "solid-service-common": "https://inrupt.com/vocab/solid-service-common#" },
  NS: _NS,



  // *******************
  // All the Literals.
  // *******************

  /**
   * Failed to process incoming message as RDF
   */
  errFailedToProcessIncomingRdf: new LitVocabTerm(
    _NS("errFailedToProcessIncomingRdf"),
    dataFactory,
    getLocalStore(),
    false
  )
    .addMessage(`Failed to process incoming message as RDF`, "en"),

  /**
   * Incoming request validated as RDF (it contains [{{0}}] triples!)
   */
  msgRequestValidatedAsRdf: new LitVocabTerm(
    _NS("msgRequestValidatedAsRdf"),
    dataFactory,
    getLocalStore(),
    false
  )
    .addMessage(`Incoming request validated as RDF (it contains [{{0}}] triples!)`, "en"),
  //
  // Marker allowing us put commas at the end of all lines above (only the last line does not have a comma).
  //
  END_OF_VOCAB: 'End of vocab.'
}

module.exports = SOLID_SERVICE_COMMON;
